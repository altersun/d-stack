http {
    include mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        listen [::]:80;
        server_name donnybrook.boston www.donnybrook.boston;

        # location /.well-known/acme-challenge/ {
        #     root /var/www/certbot;
        # }


        return 301 https://$host$request_uri;

    }

    server {
        listen 443 ssl;
        listen [::]:445 ssl;

        server_name donnybrook.boston www.donnybrook.boston;

        # Placeholder certificates    
        ssl_certificate /etc/nginx/ssl/selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/selfsigned.key;
        #ssl_dhparam /etc/nginx/ssl/dhparam.pem;

        # Use Certbot certificates if they exist
        if (-f /etc/letsencrypt/live/donnybrook.boston/fullchain.pem) {
            ssl_certificate /etc/letsencrypt/live/donnybrook.boston/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/donnybrook.boston/privkey.pem;
        }

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Root directory where static files are stored
        root /var/www;

        # Serve the root `/` URL with `index.html`
        location = / {
            index index.html;
            try_files /index.html =404;
        }

        # Handle requests for `/xxx` URLs
        location ~ ^/([^/]+)/?$ {
            # Capture `xxx` as `$1` and attempt to serve in the following order:
            # 1. `xxx/index.html`
            # 2. `xxx/xxx.html`
            try_files /$1/index.html /$1/$1.html /$1 /$1/ =404;
        }

        # Special case: Handle `/xxx/about` URLs
        location ~ ^/([^/]+)/about/?$ {
            # Capture `xxx` as `$1` and attempt to serve `xxx/about.html`
            add_header Content-Type "text/html; charset=utf-8";
            try_files /$1/about.html =404;
        }

        # Root 'about' file needs it's own special location since it
        # does't really follow the above pattern
         location = /about {
            add_header Content-Type "text/html; charset=utf-8";
            try_files /about.html =404;
        }

        # Forward WebSocket requests matching `/ws/xxx` to the Sanic app
        location ~ ^/ws/([^/]+)$ {
            proxy_pass http://172.17.0.1:8000;   # For docker-on-linux, this is the default host IP
            proxy_http_version 1.1;              # Enable HTTP/1.1 for WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }

        # Default fallback for unmatched routes
        error_page 404 403 500 503 /error.html;
        location = /error.html {
            root /var/www;
            internal;
        }

    }
}